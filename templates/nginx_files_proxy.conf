user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # We don't use the following default log format because we anonymize IP addresses below
    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                   '$status $body_bytes_sent "$http_referer" '
    #                   '"$http_user_agent" "$http_x_forwarded_for"';
    # access_log  /var/log/nginx/access.log  main;

    # As long as nginx runs behind Traefik, no anonymization of $remote_addr is necessary as it's the container IP.
    # The user's IP is in $http_x_forwarded_for.
    map $http_x_forwarded_for $http_x_forwarded_for_anon {
        ~(?P<ip>\d+\.\d+)\.    $ip.0.0;
        ~(?P<ip>[^:]+:[^:]+):  $ip::;
        default                0.0.0.0;
    }
    log_format  anonymized  '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for_anon"';
    access_log /var/log/nginx/access.log anonymized;


    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=CACHE:10m inactive=7d max_size=1g;

    server {
      listen 80;
      listen [::]:80;
      server_name {{ mastodon_s3_alias_host }};
      root /var/www/html;

      keepalive_timeout 30;

      location = / {
        index index.html;
      }

      location / {
        try_files $uri @s3;
      }

      set $s3_backend 'https://{{ mastodon_s3_hostname }}/{{ mastodon_s3_bucket }}';

      location @s3 {
        limit_except GET {
          deny all;
        }

        resolver 8.8.8.8;
        proxy_set_header Host {{ mastodon_s3_hostname }};
        proxy_set_header Connection '';
        proxy_set_header Authorization '';
        proxy_hide_header Set-Cookie;
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header x-amz-id-2;
        proxy_hide_header x-amz-request-id;
        proxy_hide_header x-amz-version-id;
        proxy_hide_header x-amz-meta-server-side-encryption;
        proxy_hide_header x-amz-server-side-encryption;
        proxy_hide_header x-amz-bucket-region;
        proxy_hide_header x-amzn-requestid;
        proxy_ignore_headers Set-Cookie;
        proxy_pass $s3_backend$uri;
        proxy_intercept_errors off;

        proxy_cache CACHE;
        proxy_cache_valid 200 48h;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;

        expires 1y;
        add_header Cache-Control public;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-Content-Type-Options nosniff;
        add_header Content-Security-Policy "default-src 'none'; form-action 'none'";
      }
    }
}
